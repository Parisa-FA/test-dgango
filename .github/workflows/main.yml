name: Deploy to EC2

on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow on

env:
  DJANGO_TUTORIAL_API_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/store
  DJANGO_TUTORIAL_NGINX_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/nginx
  REGISTRY: ghcr.io


jobs:
  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Copy files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/django_project/
    
    - name: SSH into EC2 and update containers
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ~/django_project/
          
          # Log in to GitHub Container Registry
          echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
          
          # Pull the latest images from the GitHub Container Registry
          docker-compose -f docker-compose.prod.yml pull

          # Stop and remove the existing containers
          docker-compose -f docker-compose.prod.yml down --rmi all -v

          # Rebuild the containers
          docker-compose -f docker-compose.prod.yml up -d --build

          # Clean up dangling images and containers
          docker system prune -f

          # Log out from GitHub Container Registry
          docker logout ghcr.io
        EOF

    - name: Notify of successful deployment
      run: echo "Deployment to EC2 instance completed successfully."
